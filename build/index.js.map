{"version":3,"sources":["../src/index.js"],"names":["app","PORT","process","env","animals","name","breed","gender","isVaccinated","vaccines","use","bodyParser","json","urlencoded","extended","listen","console","log","get","req","res","send","post","animal","body","some","e","toUpperCase","push","status","message","put","params","filteredAnimal","filter","length","splice","findIndex"],"mappings":"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","sourcesContent":["import bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport 'dotenv/config';\r\nimport express from 'express';\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 8080;\r\n\r\nconst animals = [{\r\n    name: \"Manchas\",\r\n    breed: \"Bengali\",\r\n    gender: \"Female\",\r\n    isVaccinated: true,\r\n    vaccines: [\"rabia\", \"leucemia\", \"parvovirus\"]\r\n}]\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}));\r\n\r\napp.listen(PORT, () =>\r\n    console.log(`Example app listening on ${PORT}!`),\r\n);\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Animals Shelter API!');\r\n});\r\n\r\napp.get('/animals', (req, res) => {\r\n    res.send(animals);\r\n});\r\n\r\napp.post('/animals', (req, res) => {\r\n    const animal = req.body;\r\n    if (!animals.some(e => e.name.toUpperCase() === animal.name.toUpperCase())) {\r\n        animals.push(animal);\r\n        res.status(201).send(animal);\r\n    } else {\r\n        res.status(409).json({ message: 'The animal has already been created' });\r\n    }\r\n});\r\n\r\napp.put('/animals/:name', (req, res) => {\r\n    const { name } = req.params;\r\n    const { breed, gender, isVaccinated, vaccines } = req.body;\r\n    const filteredAnimal = animals.filter(animal => animal.name.toUpperCase() === name.toUpperCase());\r\n    if (filteredAnimal.length > 0) {\r\n        filteredAnimal[0].breed = breed\r\n        filteredAnimal[0].gender = gender\r\n        filteredAnimal[0].isVaccinated = isVaccinated\r\n        filteredAnimal[0].vaccines = vaccines\r\n        animals.splice(animals.findIndex(animal => animal.name.toUpperCase() === name.toUpperCase()), 1, filteredAnimal[0]);\r\n        res.status(200).send(animals.filter(animal => animal.name.toUpperCase() === name.toUpperCase())[0]);\r\n    } else\r\n        res.status(404).json({ message: `Animal with the name ${name} not found` });\r\n});\r\n\r\napp.delete('/animals/:name', (req, res) => {\r\n    const { name } = req.params;\r\n    const filteredAnimal = animals.filter(animal => animal.name.toUpperCase() === name.toUpperCase());\r\n    if (filteredAnimal.length > 0) {\r\n        animals.splice(animals.findIndex(animal => animal.name.toUpperCase() === name.toUpperCase()), 1);\r\n        res.status(200).json({ message: `Animal deleted successfully` });\r\n    } else\r\n        res.status(404).json({ message: `Animal with the name ${name} not found` });\r\n});\r\n\r\napp.get('/animals/:name', (req, res) => {\r\n    const { name } = req.params;\r\n    const filteredAnimal = animals.filter(animal => animal.name.toUpperCase() === name.toUpperCase());\r\n    if (filteredAnimal.length > 0) {\r\n        animals.splice(animals.findIndex(animal => animal.name.toUpperCase() === name.toUpperCase()), 1);\r\n        res.status(200).send(filteredAnimal[0]);\r\n    } else\r\n        res.status(404).json({ message: `Animal with the name ${name} not found` });\r\n});\r\n"],"file":"index.js"}